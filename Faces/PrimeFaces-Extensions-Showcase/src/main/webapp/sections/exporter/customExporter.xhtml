<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:showcase="http://primefaces.org/ui/extensions/showcase">
<ui:composition template="/templates/showcaseLayout.xhtml">
    <ui:define name="centerContent">
        <f:facet name="header">
            <h:outputText value="Exporter"/>
        </f:facet>
        <h:panelGroup layout="block" styleClass="centerContent">
            This feature enables fully customizable exporter with the required functionalities with the help of Service Loader Concept.
            <p/>
            Steps needs to follow:
            <p/>
            <ul>
                <li>Step 1: Create a folder named META-INF under resouces folder.Below META-INF folder create another folder called services.</li>
                <li>Step 2: Creae a file with the name  "ExporterFactory" as a service(Fully binary name of the service).
                    <br/> &#160;&#160;&#160; Here it should be  org.primefaces.extensions.component.exporter.ExporterFactory.
                </li>
                <li>Step 3: Provide your own implementaions/providers of Exporter factory anywhere in your project. <br/> &#160;&#160;&#160; And copy the absolute path of custom exporter factory implementation in the ExporterFactory file
                    <br/> &#160;&#160;&#160; <strong>How to do :</strong> Copy the file content of DefaultExporterFactory and rename the file as  CustomExporterFactory.Copy the absolute path org.primefaces.extensions.showcase.util.CustomExporterFactory in ExporterFactory file.
                </li>
                <li>Step 4: Copy the exporter implementations and add your own changes.And call these custom &#160;&#160;&#160; implementations(Ex PDFCustomExporter,ExcelCustomExporter) instead built-in implmentations(Ex PDFExporter,ExcelExporter)</li>
            </ul>
            <br/>
            The below example demonstrates how the index column added using Custom Exporter feature.

        </h:panelGroup>
        <h:panelGroup layout="block" styleClass="centerExample">
            <ui:include src="/sections/exporter/example-customExporterTables.xhtml"/>
        </h:panelGroup>


        <ui:decorate template="/templates/twoTabsDecorator.xhtml">
            <ui:define name="contentTab1">
                ${showcase:getFileContent('/sections/exporter/example-customExporterTables.xhtml')}
            </ui:define>
            <ui:define name="contentTab2">
                ${showcase:getFileContent('/org/primefaces/extensions/showcase/controller/exporter/MessageTableController.java')}
            </ui:define>
        </ui:decorate>
    </ui:define>

    <ui:define name="useCases">
        <ui:include src="/sections/exporter/useCasesChoice.xhtml"/>
    </ui:define>
    <ui:define name="docuTable">
        <ui:include src="/sections/shared/documentation.xhtml">
            <ui:param name="tagName" value="exporter"/>
        </ui:include>
    </ui:define>
</ui:composition>
</html>
